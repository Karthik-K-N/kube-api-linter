package a

type TestNumbers struct {
	Int *int `json:"int,omitempty"` // want "field Int should have the omitempty tag." "field Int should be a pointer."

	IntWithOmitEmpty *int `json:"intWithOmitEmpty,omitempty"` // want "field IntWithOmitEmpty should be a pointer."

	// +kubebuilder:validation:Minimum=1
	IntWithPositiveMinimum *int `json:"intWithPositiveMinimum,omitempty"` // want "field IntWithPositiveMinimum should have the omitempty tag." "field IntWithPositiveMinimum should be a pointer."

	// +kubebuilder:validation:Minimum=1
	IntWithPositiveMinimumWithOmitEmpty *int `json:"intWithPositiveMinimumWithOmitEmpty,omitempty"` // want "field IntWithPositiveMinimumWithOmitEmpty should be a pointer."

	// +kubebuilder:validation:Minimum=0
	IntWithZeroMinimum *int `json:"intWithZeroMinimum,omitempty"` // want "field IntWithZeroMinimum should have the omitempty tag." "field IntWithZeroMinimum should be a pointer."

	// +kubebuilder:validation:Minimum=0
	IntWithZeroMinimumWithOmitEmpty *int `json:"intWithZeroMinimumWithOmitEmpty,omitempty"` // want "field IntWithZeroMinimumWithOmitEmpty should be a pointer."

	// +kubebuilder:validation:Minimum=-1
	IntWithNegativeMinimum *int `json:"intWithNegativeMinimum,omitempty"` // want "field IntWithNegativeMinimum should have the omitempty tag." "field IntWithNegativeMinimum should be a pointer."

	// +kubebuilder:validation:Minimum=-1
	IntWithNegativeMinimumWithOmitEmpty *int `json:"intWithNegativeMinimumWithOmitEmpty,omitempty"` // want "field IntWithNegativeMinimumWithOmitEmpty should be a pointer."

	// +kubebuilder:validation:Maximum=1
	IntWithPositiveMaximum *int `json:"intWithPositiveMaximum,omitempty"` // want "field IntWithPositiveMaximum should have the omitempty tag." "field IntWithPositiveMaximum should be a pointer."

	// +kubebuilder:validation:Maximum=1
	IntWithPositiveMaximumWithOmitEmpty *int `json:"intWithPositiveMaximumWithOmitEmpty,omitempty"` // want "field IntWithPositiveMaximumWithOmitEmpty should be a pointer."

	// +kubebuilder:validation:Maximum=0
	IntWithZeroMaximum *int `json:"intWithZeroMaximum,omitempty"` // want "field IntWithZeroMaximum should have the omitempty tag." "field IntWithZeroMaximum should be a pointer."

	// +kubebuilder:validation:Maximum=0
	IntWithZeroMaximumWithOmitEmpty *int `json:"intWithZeroMaximumWithOmitEmpty,omitempty"` // want "field IntWithZeroMaximumWithOmitEmpty should be a pointer."

	// +kubebuilder:validation:Maximum=-1
	IntWithNegativeMaximum *int `json:"intWithNegativeMaximum,omitempty"` // want "field IntWithNegativeMaximum should have the omitempty tag." "field IntWithNegativeMaximum should be a pointer."

	// +kubebuilder:validation:Maximum=-1
	IntWithNegativeMaximumWithOmitEmpty *int `json:"intWithNegativeMaximumWithOmitEmpty,omitempty"` // want "field IntWithNegativeMaximumWithOmitEmpty should be a pointer."

	// +kubebuilder:validation:Minimum=-1
	// +kubebuilder:validation:Maximum=1
	IntWithRangeIncludingZero *int `json:"intWithRangeIncludingZero,omitempty"` // want "field IntWithRangeIncludingZero should have the omitempty tag." "field IntWithRangeIncludingZero should be a pointer."

	// +kubebuilder:validation:Minimum=-1
	// +kubebuilder:validation:Maximum=1
	IntWithRangeIncludingZeroWithOmitEmpty *int `json:"intWithRangeIncludingZeroWithOmitEmpty,omitempty"` // want "field IntWithRangeIncludingZeroWithOmitEmpty should be a pointer."

	IntPtr *int `json:"intPtr,omitempty"` // want "field IntPtr should have the omitempty tag."

	IntPtrWithOmitEmpty *int `json:"intPtrWithOmitEmpty,omitempty"`

	// +kubebuilder:validation:Minimum=1
	IntPtrWithPositiveMinimum *int `json:"intPtrWithPositiveMinimum,omitempty"` // want "field IntPtrWithPositiveMinimum should have the omitempty tag."

	// +kubebuilder:validation:Minimum=1
	IntPtrWithPositiveMinimumWithOmitEmpty *int `json:"intPtrWithPositiveMinimumWithOmitEmpty,omitempty"`

	// +kubebuilder:validation:Minimum=0
	IntPtrWithZeroMinimum *int `json:"intPtrWithZeroMinimum,omitempty"` // want "field IntPtrWithZeroMinimum should have the omitempty tag."

	// +kubebuilder:validation:Minimum=0
	IntPtrWithZeroMinimumWithOmitEmpty *int `json:"intPtrWithZeroMinimumWithOmitEmpty,omitempty"`

	// +kubebuilder:validation:Minimum=-1
	IntPtrWithNegativeMinimum *int `json:"intPtrWithNegativeMinimum,omitempty"` // want "field IntPtrWithNegativeMinimum should have the omitempty tag."

	// +kubebuilder:validation:Minimum=-1
	IntPtrWithNegativeMinimumWithOmitEmpty *int `json:"intPtrWithNegativeMinimumWithOmitEmpty,omitempty"`

	// +kubebuilder:validation:Maximum=1
	IntPtrWithPositiveMaximum *int `json:"intPtrWithPositiveMaximum,omitempty"` // want "field IntPtrWithPositiveMaximum should have the omitempty tag."

	// +kubebuilder:validation:Maximum=1
	IntPtrWithPositiveMaximumWithOmitEmpty *int `json:"intPtrWithPositiveMaximumWithOmitEmpty,omitempty"`

	// +kubebuilder:validation:Maximum=0
	IntPtrWithZeroMaximum *int `json:"intPtrWithZeroMaximum,omitempty"` // want "field IntPtrWithZeroMaximum should have the omitempty tag."

	// +kubebuilder:validation:Maximum=0
	IntPtrWithZeroMaximumWithOmitEmpty *int `json:"intPtrWithZeroMaximumWithOmitEmpty,omitempty"`

	// +kubebuilder:validation:Maximum=-1
	IntPtrWithNegativeMaximum *int `json:"intPtrWithNegativeMaximum,omitempty"` // want "field IntPtrWithNegativeMaximum should have the omitempty tag."

	// +kubebuilder:validation:Maximum=-1
	IntPtrWithNegativeMaximumWithOmitEmpty *int `json:"intPtrWithNegativeMaximumWithOmitEmpty,omitempty"`

	// +kubebuilder:validation:Minimum=-1
	// +kubebuilder:validation:Maximum=1
	IntPtrWithRangeIncludingZero *int `json:"intPtrWithRangeIncludingZero,omitempty"` // want "field IntPtrWithRangeIncludingZero should have the omitempty tag."

	// +kubebuilder:validation:Minimum=-1
	// +kubebuilder:validation:Maximum=1
	IntPtrWithRangeIncludingZeroWithOmitEmpty *int `json:"intPtrWithRangeIncludingZeroWithOmitEmpty,omitempty"`

	Int32 *int32 `json:"int32,omitempty"` // want "field Int32 should have the omitempty tag." "field Int32 should be a pointer."

	// +kubebuilder:validation:Minimum=1
	Int32WithPositiveMinimum *int32 `json:"int32WithPositiveMinimum,omitempty"` // want "field Int32WithPositiveMinimum should have the omitempty tag." "field Int32WithPositiveMinimum should be a pointer."

	// +kubebuilder:validation:Minimum=0
	Int32WithZeroMinimum *int32 `json:"int32WithZeroMinimum,omitempty"` // want "field Int32WithZeroMinimum should have the omitempty tag." "field Int32WithZeroMinimum should be a pointer."

	// +kubebuilder:validation:Minimum=-1
	Int32WithNegativeMinimum *int32 `json:"int32WithNegativeMinimum,omitempty"` // want "field Int32WithNegativeMinimum should have the omitempty tag." "field Int32WithNegativeMinimum should be a pointer."

	// +kubebuilder:validation:Maximum=1
	Int32WithPositiveMaximum *int32 `json:"int32WithPositiveMaximum,omitempty"` // want "field Int32WithPositiveMaximum should have the omitempty tag." "field Int32WithPositiveMaximum should be a pointer."

	// +kubebuilder:validation:Maximum=0
	Int32WithZeroMaximum *int32 `json:"int32WithZeroMaximum,omitempty"` // want "field Int32WithZeroMaximum should have the omitempty tag." "field Int32WithZeroMaximum should be a pointer."

	// +kubebuilder:validation:Maximum=-1
	Int32WithNegativeMaximum *int32 `json:"int32WithNegativeMaximum,omitempty"` // want "field Int32WithNegativeMaximum should have the omitempty tag." "field Int32WithNegativeMaximum should be a pointer."

	// +kubebuilder:validation:Minimum=-1
	// +kubebuilder:validation:Maximum=1
	Int32WithRangeIncludingZero *int32 `json:"int32WithRangeIncludingZero,omitempty"` // want "field Int32WithRangeIncludingZero should have the omitempty tag." "field Int32WithRangeIncludingZero should be a pointer."

	Int64 *int64 `json:"int64,omitempty"` // want "field Int64 should have the omitempty tag." "field Int64 should be a pointer."

	// +kubebuilder:validation:Minimum=1
	Int64WithPositiveMinimum *int64 `json:"int64WithPositiveMinimum,omitempty"` // want "field Int64WithPositiveMinimum should have the omitempty tag." "field Int64WithPositiveMinimum should be a pointer."

	// +kubebuilder:validation:Minimum=0
	Int64WithZeroMinimum *int64 `json:"int64WithZeroMinimum,omitempty"` // want "field Int64WithZeroMinimum should have the omitempty tag." "field Int64WithZeroMinimum should be a pointer."

	// +kubebuilder:validation:Minimum=-1
	Int64WithNegativeMinimum *int64 `json:"int64WithNegativeMinimum,omitempty"` // want "field Int64WithNegativeMinimum should have the omitempty tag." "field Int64WithNegativeMinimum should be a pointer."

	// +kubebuilder:validation:Maximum=1
	Int64WithPositiveMaximum *int64 `json:"int64WithPositiveMaximum,omitempty"` // want "field Int64WithPositiveMaximum should have the omitempty tag." "field Int64WithPositiveMaximum should be a pointer."

	// +kubebuilder:validation:Maximum=0
	Int64WithZeroMaximum *int64 `json:"int64WithZeroMaximum,omitempty"` // want "field Int64WithZeroMaximum should have the omitempty tag." "field Int64WithZeroMaximum should be a pointer."

	// +kubebuilder:validation:Maximum=-1
	Int64WithNegativeMaximum *int64 `json:"int64WithNegativeMaximum,omitempty"` // want "field Int64WithNegativeMaximum should have the omitempty tag." "field Int64WithNegativeMaximum should be a pointer."

	// +kubebuilder:validation:Minimum=-1
	// +kubebuilder:validation:Maximum=1
	Int64WithRangeIncludingZero *int64 `json:"int64WithRangeIncludingZero,omitempty"` // want "field Int64WithRangeIncludingZero should have the omitempty tag." "field Int64WithRangeIncludingZero should be a pointer."

	Float32 *float32 `json:"float32,omitempty"` // want "field Float32 should have the omitempty tag." "field Float32 should be a pointer."

	Float32WithOmitEmpty *float32 `json:"float32WithOmitEmpty,omitempty"` // want "field Float32WithOmitEmpty should be a pointer."

	// +kubebuilder:validation:Minimum=1
	Float32WithPositiveMinimum *float32 `json:"float32WithPositiveMinimum,omitempty"` // want "field Float32WithPositiveMinimum should have the omitempty tag." "field Float32WithPositiveMinimum should be a pointer."

	// +kubebuilder:validation:Minimum=1
	Float32WithPositiveMinimumWithOmitEmpty *float32 `json:"float32WithPositiveMinimumWithOmitEmpty,omitempty"` // want "field Float32WithPositiveMinimumWithOmitEmpty should be a pointer."

	// +kubebuilder:validation:Minimum=0
	Float32WithZeroMinimum *float32 `json:"float32WithZeroMinimum,omitempty"` // want "field Float32WithZeroMinimum should have the omitempty tag." "field Float32WithZeroMinimum should be a pointer."

	// +kubebuilder:validation:Minimum=0
	Float32WithZeroMinimumWithOmitEmpty *float32 `json:"float32WithZeroMinimumWithOmitEmpty,omitempty"` // want "field Float32WithZeroMinimumWithOmitEmpty should be a pointer."

	// +kubebuilder:validation:Minimum=-1
	Float32WithNegativeMinimum *float32 `json:"float32WithNegativeMinimum,omitempty"` // want "field Float32WithNegativeMinimum should have the omitempty tag." "field Float32WithNegativeMinimum should be a pointer."

	// +kubebuilder:validation:Minimum=-1
	Float32WithNegativeMinimumWithOmitEmpty *float32 `json:"float32WithNegativeMinimumWithOmitEmpty,omitempty"` // want "field Float32WithNegativeMinimumWithOmitEmpty should be a pointer."

	// +kubebuilder:validation:Maximum=1
	Float32WithPositiveMaximum *float32 `json:"float32WithPositiveMaximum,omitempty"` // want "field Float32WithPositiveMaximum should have the omitempty tag." "field Float32WithPositiveMaximum should be a pointer."

	// +kubebuilder:validation:Maximum=1
	Float32WithPositiveMaximumWithOmitEmpty *float32 `json:"float32WithPositiveMaximumWithOmitEmpty,omitempty"` // want "field Float32WithPositiveMaximumWithOmitEmpty should be a pointer."

	// +kubebuilder:validation:Maximum=0
	Float32WithZeroMaximum *float32 `json:"float32WithZeroMaximum,omitempty"` // want "field Float32WithZeroMaximum should have the omitempty tag." "field Float32WithZeroMaximum should be a pointer."

	// +kubebuilder:validation:Maximum=0
	Float32WithZeroMaximumWithOmitEmpty *float32 `json:"float32WithZeroMaximumWithOmitEmpty,omitempty"` // want "field Float32WithZeroMaximumWithOmitEmpty should be a pointer."

	// +kubebuilder:validation:Maximum=-1
	Float32WithNegativeMaximum *float32 `json:"float32WithNegativeMaximum,omitempty"` // want "field Float32WithNegativeMaximum should have the omitempty tag." "field Float32WithNegativeMaximum should be a pointer."

	// +kubebuilder:validation:Maximum=-1
	Float32WithNegativeMaximumWithOmitEmpty *float32 `json:"float32WithNegativeMaximumWithOmitEmpty,omitempty"` // want "field Float32WithNegativeMaximumWithOmitEmpty should be a pointer."

	// +kubebuilder:validation:Minimum=-1
	// +kubebuilder:validation:Maximum=1
	Float32WithRangeIncludingZero *float32 `json:"float32WithRangeIncludingZero,omitempty"` // want "field Float32WithRangeIncludingZero should have the omitempty tag." "field Float32WithRangeIncludingZero should be a pointer."

	// +kubebuilder:validation:Minimum=-1
	// +kubebuilder:validation:Maximum=1
	Float32WithRangeIncludingZeroWithOmitEmpty *float32 `json:"float32WithRangeIncludingZeroWithOmitEmpty,omitempty"` // want "field Float32WithRangeIncludingZeroWithOmitEmpty should be a pointer."

	Float64 *float64 `json:"float64,omitempty"` // want "field Float64 should have the omitempty tag." "field Float64 should be a pointer."

	// +kubebuilder:validation:Minimum=1
	Float64WithPositiveMinimum *float64 `json:"float64WithPositiveMinimum,omitempty"` // want "field Float64WithPositiveMinimum should have the omitempty tag." "field Float64WithPositiveMinimum should be a pointer."

	// +kubebuilder:validation:Minimum=0
	Float64WithZeroMinimum *float64 `json:"float64WithZeroMinimum,omitempty"` // want "field Float64WithZeroMinimum should have the omitempty tag." "field Float64WithZeroMinimum should be a pointer."

	// +kubebuilder:validation:Minimum=-1
	Float64WithNegativeMinimum *float64 `json:"float64WithNegativeMinimum,omitempty"` // want "field Float64WithNegativeMinimum should have the omitempty tag." "field Float64WithNegativeMinimum should be a pointer."

	// +kubebuilder:validation:Maximum=1
	Float64WithPositiveMaximum *float64 `json:"float64WithPositiveMaximum,omitempty"` // want "field Float64WithPositiveMaximum should have the omitempty tag." "field Float64WithPositiveMaximum should be a pointer."

	// +kubebuilder:validation:Maximum=0
	Float64WithZeroMaximum *float64 `json:"float64WithZeroMaximum,omitempty"` // want "field Float64WithZeroMaximum should have the omitempty tag." "field Float64WithZeroMaximum should be a pointer."

	// +kubebuilder:validation:Maximum=-1
	Float64WithNegativeMaximum *float64 `json:"float64WithNegativeMaximum,omitempty"` // want "field Float64WithNegativeMaximum should have the omitempty tag." "field Float64WithNegativeMaximum should be a pointer."

	// +kubebuilder:validation:Minimum=-1
	// +kubebuilder:validation:Maximum=1
	Float64WithRangeIncludingZero *float64 `json:"float64WithRangeIncludingZero,omitempty"` // want "field Float64WithRangeIncludingZero should have the omitempty tag." "field Float64WithRangeIncludingZero should be a pointer."
}
